compilation:
- reduce binary size (maybe gzip data/*?)
- improve compilation times (it's sloooow... we could probably speed up the js
  macros somehow, also the html parser/tokenizer?)
charsets:
- set up some fuzzer
- use appropriate charsets in forms, urls, etc.
display:
- important: add a virtual cursor (in some terminals, the real cursor is
  often obscured by white background color)
- important: buffer list
	* either a buffer list buffer, or a buffer list popup menu. ideally
	  both.
- dark mode (basically max Y)
- do not assume default background color
	* instead, add an "override-default-color" option that is set to
	  true by default and replaces default bgcolor/fgcolor with
	  default-background/foreground-color
- allow overriding ansi colors
config:
- important: config editor
- better path handling
	* e.g. expand tilde for all paths on load, allow environment
	  variables/shell substitution, etc.
buffer:
- important: incremental html parsing
	* also, do not needlessly copy in onload
- important: validate returned values
	* do not block container when receiving buffer data; if invalid, kill
	  buffer
	* this also includes not crashing when the buffer dies while
	  container is reading...
- important: add sandboxing
	* also, other security stuff:
		- configurable/better url filtering in loader
		- make peekCursor show the entire url
- when the log buffer crashes, print its contents to stderr
	* make console.err a TeeStream, and tee it to a StringStream that
	  buffers up to 4KB
- add highlighting, copy
- add buffer groups
- add option to write source to a file, instead of keeping it in memory
- hex viewer
- xhtml
- better horizontal line handling: allow viewing content positioned before page
  start, handle long lines, etc
- do not prompt when submitting forms (it's annoying)
	* this is mostly fixed, but not completely
network:
- uBO integration? (or at least implement filter lists)
- websockets (curl supports ws)
- integrate curl-impersonate (LD_PRELOAD works, but still...)
external:
- history, bookmarks (w3m format)
- save buffer (source, output)
- edit buffer (local file, or whatever we downloaded)
javascript:
- important: callbacks should not leak memory
- add support for JS mixins
- distinguish double from unrestricted double
- better dom support, more events
	* more concretely: get jQuery to work. this needs innerHTML, CSS
	  properties in DOM, ...
- implement ReadableStream, XHR
- separate console for each buffer
	* also, do not crash on / -> M-c
- buffer selection
layout engine:
- important: clear (to complete float support)
- fix conflict in renderdocument Y error correction and floats
	* if too many line breaks are done because of floats, Y error
	  correction will happily arrange the lines on top of the floating box
- make table width calculation consistent with FF etc.
	* unfortunately, most websites are designed for auto table layouts
	  where w3m's space distribution algorithm does not work really well :/
- make background-color a property of inline boxes, not words. (this would
  require implementing actual inline boxes)
- table layout: include caption in width calculation
- details element
- overflow
- incremental layout & layout caching
	* first for tree generation, then for layout.
- iframe
- writing-mode, flexbox, grid, ruby, ... (i.e. cool new stuff)
images:
- sixel encoding (eventually also kitty)
- more formats (apng, gif: write own decoders, jpeg: use libjpeg, webp: ?)
- incremental decoding (maybe implement streams first?)
- separate image decoder process? or just run on a different thread?
etc:
- important: replace fastRuneAt with qjs libunicode (fastRuneAt has no error handling...)
- tests (including aforementioned fuzzer)
- orc support
- maybe windows support? (blocker: needs a windows machine)
