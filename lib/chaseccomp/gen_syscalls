#!/bin/sh

die() {
	echo "$*" >&2
	exit 1
}

test "$1" || die "usage: gen_syscalls [file]"

find_label() {
	printf '%s\n' "$labels" | while read -r line
	do	case $line in
		"$1 "*)	printf '%d\n' "${line#* }"
			break
			;;
		esac
	done
}

line_cut_next() {
	next=${line%% *}
	oline=$line
	line=${line#* }
	if test "$line" = "$oline"; then line= ; fi
}

cut_label() {
	line_cut_next
	label=$(find_label "$next")
	test "$label" || die "missing label $next"
	label=$(($label - 1 - $ip))
}

put_cmp() {
	line_cut_next
	val=$next
	cut_label
	printf '\t%s(%s, %d),\n' "$inst" "$val" "$label"
}

put_load() {
	line_cut_next
	printf '\t%s(%s),\n' "$inst" "$next"
}

put_ret() {
	line_cut_next
	case $next in
	allow)	val=SECCOMP_RET_ALLOW ;;
	trap)	val=SECCOMP_RET_TRAP ;;
	kill)	val=SECCOMP_RET_KILL_PROCESS ;;
	errno)	val="SECCOMP_RET_ERRNO | ($line & SECCOMP_RET_DATA)" ;;
	*)	die "wrong retval $line" ;;
	esac
	printf '\t%s(%s),\n' "$inst" "$val"
}

ip=0
while read -r line
do	line=${line%%#*}
	case $line in
	''|define' '*) ;;
	': '*)	line_cut_next
		if test -n "$labels"
		then	labels="$labels
$line $ip"
		else	labels="$line $ip"
		fi
		;;
	*)	ip=$((ip + 1)) ;;
	esac
done < "$1"

ip=0
while read -r line
do	line_cut_next
	case $next in
	:)	continue ;;
	define)	printf '#%s %s\n' "$next $line" ; continue ;;
	ret)	inst=CHA_BPF_RET put_ret ;;
	ifeq)	inst=CHA_BPF_JE put_cmp ;;
	ifne)	inst=CHA_BPF_JNE put_cmp ;;
	ifle)	inst=CHA_BPF_JLE put_cmp ;;
	load)	inst=CHA_BPF_LOAD put_load ;;
	*)	die "unexpected instruction $inst" ;;
	esac
	ip=$(($ip + 1))
done < "$1"
