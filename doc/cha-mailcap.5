.\" Automatically generated by Pandoc 3.2
.\"
.TH "cha\-mailcap" "5" "" "" "Mailcap support in Chawan"
.SH Mailcap
Chawan\[cq]s buffers can only handle HTML and plain text.
To make Chawan recognize other file formats, the mailcap file format can
be used.
.PP
Note that Chawan\[cq]s default mime.types file only recognizes a few
file extensions, which may result in your entries not being executed.
Please consult the \f[B]cha\-mime.types\f[R](5) documentation for
details.
.PP
For an exact description of the mailcap format, see \c
.UR https://www.rfc-editor.org/rfc/rfc1524
RFC 1524
.UE \c
\&.
.SS Search path
The search path for mailcap files can be overridden using the
configuration variable \f[CR]external.mailcap\f[R].
.PP
By default, the only file checked by Chawan is
\f[CR]$HOME/.mailcap\f[R].
.PP
In the past, the full path from the specification was used.
This was changed because mailcap files shipped with various systems are
usually incompatible with the assumptions Chawan makes about mailcap
file contents.
You can restore the old/standard\-recommended behavior by adding this to
your config.toml:
.IP
.EX
\f[B][external]\f[R]
mailcap = [
\[dq]\[ti]/.mailcap\[dq],
\[dq]/etc/mailcap\[dq],
\[dq]/usr/etc/mailcap\[dq],
\[dq]/usr/local/etc/mailcap\[dq]
]
.EE
.SS Format
Chawan tries to adhere to the format described in RFC 1524, with a few
extensions.
.SS Templating
\f[CR]%s\f[R], \f[CR]%t\f[R], and named content type fields like
\f[CR]%{charset}\f[R] work as described in the standard.
.PP
If no quoting is applied, Chawan will quote the templates automatically.
(This works with $(command substitutions) as well.)
.PP
DEPRECATED
.PP
The non\-standard template %u may be specified to get the original URL
of the resource.
(As far as I can tell, this is a Netscape extension that may or may not
be compatible with other implementations.)
.PP
Use of this is not recommended; instead, use the \f[CR]$MAILCAP_URL\f[R]
environment variable which is set to the same value before the execution
of every mailcap command.
.SS Fields
The \f[CR]test\f[R], \f[CR]nametemplate\f[R], \f[CR]needsterminal\f[R]
and \f[CR]copiousoutput\f[R] fields are recognized.
Additionally, the non\-standard \f[CR]x\-htmloutput\f[R] and
\f[CR]x\-ansioutput\f[R] extension fields are recognized too.
.IP \[bu] 2
When the \f[CR]test\f[R] named field is specified, the mailcap entry is
only used if the test command returns 0.
Warning: as of now, \f[CR]%s\f[R] does not work with \f[CR]test\f[R];
\f[CR]test\f[R] named fields with a \f[CR]%s\f[R] template are skipped.
Additionally, no data is piped into \f[CR]test\f[R] either.
.IP \[bu] 2
\f[CR]copiousoutput\f[R] makes Chawan redirect the output of the
external command into a new buffer.
If either x\-htmloutput or x\-ansioutput is defined too, then it is
ignored.
.IP \[bu] 2
The \f[CR]x\-htmloutput\f[R] extension field behaves the same as
\f[CR]copiousoutput\f[R], but makes Chawan interpret the command\[cq]s
output as HTML.
.IP \[bu] 2
\f[CR]x\-ansioutput\f[R] makes Chawan pipe the output through the
default \[lq]text/x\-ansi\[rq] content type handler.
This means that you get colors, formatting, etc.
displayed with ANSI escape sequences.
.IP \[bu] 2
\f[CR]needsterminal\f[R] hands over control of the terminal to the
command while it is running.
Note: as of now, \f[CR]needsterminal\f[R] does nothing if either
\f[CR]copiousoutput\f[R] or \f[CR]x\-htmloutput\f[R] is specified.
.IP \[bu] 2
For a description of \f[CR]nametemplate\f[R], see the RFC.
Note however, that it does not work with test (since %s is not supported
there).
.SS Environment variables
As noted above, the \f[CR]$MAILCAP_URL\f[R] variable is set to the URL
of the target resource before the execution of the mailcap command.
Backwards compatibility with mailcap agents that do not support this
variable can be achieved through shell substitution,
e.g.\ \f[CR]${MAILCAP_URL:\-string for when it is unsupported}\f[R].
.PP
Note that it is not recommended to set \f[CR]%s\f[R] as the fallback,
because it will force Chawan to download the entire file before
displaying it even if it could have been piped into the command.
.SS Note
Entries with a content type of text/html or text/plain are ignored.
.PP
Content types that do not appear in mailcap files are handled as text
files in case they start with \f[CR]text/\f[R].
Otherwise, they prompt the user to save the file to the disk.
.SS Examples
.IP
.EX
# Note: these examples require an entry in mime.types that sets e.g. md as
# the markdown content type.

# Handle markdown files using pandoc.
text/markdown; pandoc \- \-f markdown \-t html \-o \-; x\-htmloutput

# Show syntax highlighting for JavaScript source files using bat.
text/javascript; bat \-f \-l es6 \-\-file\-name ${MAILCAP_URL:\-STDIN} \-; x\-ansioutput

# Play music using mpv, and hand over control of the terminal until mpv exits.
audio/*; mpv \-; needsterminal

# Play videos using mpv in the background, redirecting its standard output
# and standard error to /dev/null.
video/*; mpv \-

# Open docx files using LibreOffice Writer.
application/vnd.openxmlformats\-officedocument.wordprocessingml.document;lowriter %s
# (Wow that was ugly.)

# Display manpages using pandoc. (Make sure the mime type matches the one
# set in your mime.types file for extensions .1, .2, .3, ...)
application/x\-troff\-man;pandoc \- \-f man \-t html \-o \-; x\-htmloutput

# Following entry will be ignored, as text/html is supported natively by Chawan.
text/html; cha \-dT text/html \-I %{charset}; copiousoutput
.EE
.SS See also
\f[B]cha\f[R](1)
